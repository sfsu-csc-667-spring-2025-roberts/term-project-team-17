<%- include('../partials/header'); -%>

<div class="horizontal-wrapper">
    <div>
        <h2>Room Code: <strong><%= roomCode %></strong></h2>
        <br>
        <h3>Game Status: waiting...</h3>
        <br>
        <h3>Players</h3>
        <div id="players"></diV>
        <br>
        <div class="horizontal-wrapper">
            <button class="btn" id="startGame">Start Game</button>
            <button class="btn" id="leaveRoom">Leave Room</button>
        </div>
    </div>

    <div class="chat-box">
      <h4>Chat</h4>
      <div class="chat-messages" id="chat-messages">
      </div>
      <form id="chat-form" class="chat-form">
        <input id="chat-input" type="text" placeholder="Type a message..." required />
      </form>
    </div>
</div>
        

<%- include('../partials/footer'); -%>

<script src="https://cdn.socket.io/4.8.1/socket.io.min.js" integrity="sha384-mkQ3/7FUtcGyoppY6bz/PORYoGqOl7/aSUMn2ymDOJcapfS6PHqxhRTMh1RR0Q6+" crossorigin="anonymous"></script>
<script>
    const socket = io('http://localhost:3000');
    
    socket.on('connect', () => console.log('Connected to server with ID:', socket.id));
    socket.on('disconnect', () => console.log('Disconnected from server'));
    socket.on('error', (error) => console.error('Socket error:', error));

    socket.emit('joinRoom', '<%= roomCode %>', '<%= user.jwt %>');

    socket.on('players', (players) => {
        console.log('Players in room:', players);
        const playersDiv = document.getElementById('players');
        playersDiv.innerHTML = '';
        players.forEach((player) => {
            const playerDiv = document.createElement('div');
            playerDiv.className = 'container';
            playerDiv.textContent = player.username;
            playersDiv.appendChild(playerDiv);
        });
    });

    const leaveRoomButton = document.getElementById('leaveRoom');

    leaveRoomButton.addEventListener('click', (event) => {
        event.preventDefault();
        socket.emit('leaveRoom', '<%= roomCode %>', '<%= user.jwt %>');
        window.location.href = '/lobby';
    });

    const startGameButton = document.getElementById('startGame');

    startGameButton.addEventListener('click', (event) => {
        event.preventDefault();
        socket.emit('startGame', '<%= roomCode %>');
    });

    socket.on('gameStarted', () => {
        console.log('Game started');
        window.location.href = '/game/<%= roomCode %>';
    });

    function appendChatMessage(sender, text) {
        const chatMessages = document.getElementById('chat-messages');
        const msg = document.createElement('p');
        msg.innerHTML = `<strong>${sender}:</strong> ${text}`;
        chatMessages.appendChild(msg);
        chatMessages.scrollTop = chatMessages.scrollHeight; // auto-scroll to bottom
    }

    socket.on('receiveMessage', ({ sender, text }) => {
        appendChatMessage(sender, text);
    });

    const chatForm = document.getElementById('chat-form');
    const chatInput = document.getElementById('chat-input');

    chatForm.addEventListener('submit', (e) => {
        e.preventDefault(); // prevent page reload

        const message = chatInput.value.trim();
        if (message === '') return;

        socket.emit('sendMessage', {
            roomCode: '<%= roomCode %>',
            jwt: '<%= user.jwt %>',
            text: message,
        });

        chatInput.value = ''; // Clear input field
    });
</script>

</script>

<style>
.chat-box {
  max-width: 400px;
  width: 100%;
  padding: 10px;
  border-radius: 10px;
  background: white;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  display: flex;
  flex-direction: column;
  box-sizing: border-box;
}

.chat-messages {
  height: 400px; /* FIXED height */
  overflow-y: auto;
  padding: 10px;
  font-size: 0.9rem;
  background: #fafafa;
  border: 1px solid #eee;
  border-radius: 5px;
  margin-bottom: 10px;
}

.chat-form {
  display: flex;
  flex-direction: row;
  gap: 10px;
  width: 100% !important;
  margin: 0 !important;
  padding: 0 !important;
  box-shadow: none !important;
  background: none !important;
}

.chat-form input {
  width: 100% !important;
  padding: 10px !important;
  border: 1px solid #ddd !important;
  border-radius: 5px !important;
  font-size: 1rem !important;
  box-sizing: border-box !important;
}

.horizontal-wrapper {
  display: flex;
  gap: 40px;
  align-items: flex-start;
  justify-content: space-between;
  max-width: 1200px;
  margin: 0 auto;
}

</style>